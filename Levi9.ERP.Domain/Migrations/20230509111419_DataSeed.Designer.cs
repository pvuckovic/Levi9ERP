// <auto-generated />
using System;
using Levi9.ERP.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Levi9.ERP.Domain.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230509111419_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PriceListId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Njegoseva 2",
                            Email = "zlatko123@gmail.com",
                            GlobalId = new Guid("77b57406-b58f-457c-9d98-b929818ae4d9"),
                            LastUpdate = "634792557112051692",
                            Name = "Zlatko",
                            Password = "test",
                            Phone = "064322222",
                            PriceListId = 1,
                            Salt = "test1"
                        });
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            DocumentType = "INVOICE",
                            GlobalId = new Guid("7b9a4a5a-f375-42a2-9978-37c20955876b"),
                            LastUpdate = "634792557112051692"
                        });
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Price", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<float>("PriceValue")
                        .HasColumnType("real");

                    b.HasKey("ProductId", "PriceListId");

                    b.HasIndex("PriceListId");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            PriceListId = 1,
                            Currency = "USD",
                            GlobalId = new Guid("33246dbc-c70b-45fb-bdf4-f9fb95943ab4"),
                            LastUpdate = "634792557112051692",
                            PriceValue = 12f
                        },
                        new
                        {
                            ProductId = 2,
                            PriceListId = 2,
                            Currency = "EUR",
                            GlobalId = new Guid("5ea9e226-4989-465e-9898-914f9e3269fc"),
                            LastUpdate = "634792557112051693",
                            PriceValue = 30f
                        },
                        new
                        {
                            ProductId = 3,
                            PriceListId = 3,
                            Currency = "RSD",
                            GlobalId = new Guid("ca30c82e-85cd-4aa5-ad36-945112d77187"),
                            LastUpdate = "634792557112051694",
                            PriceValue = 1500f
                        },
                        new
                        {
                            ProductId = 4,
                            PriceListId = 3,
                            Currency = "RSD",
                            GlobalId = new Guid("621e8d61-1f26-441c-bc9f-992d3043c7f1"),
                            LastUpdate = "634792557112051695",
                            PriceValue = 1700f
                        });
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriceLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GlobalId = new Guid("494ad824-8ee2-47c3-938f-2de7a43db415"),
                            LastUpdate = "634792557112051692",
                            Name = "USD Price List"
                        },
                        new
                        {
                            Id = 2,
                            GlobalId = new Guid("99ee6d21-9481-4462-b0bc-9f61c1761eae"),
                            LastUpdate = "634792557112051693",
                            Name = "EUR Price List"
                        },
                        new
                        {
                            Id = 3,
                            GlobalId = new Guid("9e1865fd-081e-45f3-9b46-2a7a3e24b858"),
                            LastUpdate = "634792557112051694",
                            Name = "RSD Price List"
                        });
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableQuantity = 70,
                            GlobalId = new Guid("80be8105-ac8b-4ae3-9a7f-d5d0c243cdae"),
                            ImageUrl = "someurl123344444",
                            LastUpdate = "634792557112051692",
                            Name = "Shirt"
                        },
                        new
                        {
                            Id = 2,
                            AvailableQuantity = 140,
                            GlobalId = new Guid("a0f00594-2706-4c91-83c9-542137c3149a"),
                            ImageUrl = "slika.png",
                            LastUpdate = "634792557112051693",
                            Name = "A T-Shirt"
                        },
                        new
                        {
                            Id = 3,
                            AvailableQuantity = 150,
                            GlobalId = new Guid("86cb027d-1d5c-4d7d-a157-6d46bc4a9749"),
                            ImageUrl = "slika2.png",
                            LastUpdate = "634792557112051694",
                            Name = "Z T-Shirt"
                        },
                        new
                        {
                            Id = 4,
                            AvailableQuantity = 550,
                            GlobalId = new Guid("ce3f669a-59ac-4105-a295-9b6059e58845"),
                            ImageUrl = "slika3.png",
                            LastUpdate = "634792557112051695",
                            Name = "B T-Shirt"
                        });
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.ProductDocument", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<float>("PriceValue")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "DocumentId");

                    b.HasIndex("DocumentId");

                    b.ToTable("ProductDocuments");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            DocumentId = 1,
                            Currency = "USD",
                            PriceValue = 12f,
                            Quantity = 11
                        });
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Client", b =>
                {
                    b.HasOne("Levi9.ERP.Domain.Models.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Document", b =>
                {
                    b.HasOne("Levi9.ERP.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Price", b =>
                {
                    b.HasOne("Levi9.ERP.Domain.Models.PriceList", "PriceList")
                        .WithMany("Prices")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Levi9.ERP.Domain.Models.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.ProductDocument", b =>
                {
                    b.HasOne("Levi9.ERP.Domain.Models.Document", "Document")
                        .WithMany("ProductDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Levi9.ERP.Domain.Models.Product", "Product")
                        .WithMany("ProductDocuments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Document", b =>
                {
                    b.Navigation("ProductDocuments");
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.PriceList", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("Levi9.ERP.Domain.Models.Product", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("ProductDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
